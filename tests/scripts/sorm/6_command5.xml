<?xml version="1.0" encoding="UTF-8" ?>

<scenario name="sorm_test6">

	<connect connection="0" mode="client" />
	<connect connection="1" mode="client" />

	<!-->
	HAVE BUG IN 6.23 & 7.18


	Sorm start
	<-->
	<send connection="0">
		<![CDATA[
		1 (header=[[$$sock.0.ormNum], [$$sock.0.password]])
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=1, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=1, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	Preconf
	<-->
	<send connection="0">
		<![CDATA[
		4 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; line_group_number=1, line_group_type='combined', line_a_number=1)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="3000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=4, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=4, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<send connection="0">
		<![CDATA[
		4 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; line_group_number=2, line_group_type='separate', line_a_number=5, line_b_number=6)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="3000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=4, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=4, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.1
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.2
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=2, object_type="full", phone_number=[$$users.3.username], control_category="separate", line_group_number=2, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.3
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=3, object_type="trunk", control_category="combined", line_group_number=1, priority="common", linkset_number=0)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.4
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=4, object_type="partial", phone_number=[$$users.4.username], control_category="separate", line_group_number=2, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.5
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=5, object_type="partial", phone_number=[$$users.1.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.6
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.1.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.7
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=2, object_type="full", phone_number=[$$users.1.username], control_category="separate", line_group_number=2, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.8
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=3, object_type="trunk", control_category="combined", line_group_number=1, linkset_number=[$$trunks.0.number], priority="common")
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.9
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="local", phone_number=[$$users.0.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.10
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="local", phone_number=[$$users.0.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.11
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="combined", line_group_number=2, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.12
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="combined", line_group_number=3, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.13
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="combined", line_group_number=1, priority="common", phone_length=17, phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.14
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="partial", phone_number=[$$users.2.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.15
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="combined", line_group_number=1, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.16
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="invalid", phone_number=[$$users.2.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=1)
				]]>
			</validate>
		</actions>
	</recv>


	<!-->
	6.17
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="combined", line_group_number=1, priority="common", phone_type='invalid', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.18
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="invalid", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.19
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="combined", line_group_number=254, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.20
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="combined", line_group_number=1, priority="invalid", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=1)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	6.21
	Take off user0 from full control and put it on statistical control
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="local", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	SIP registration and call
	<-->
	<send connection="2" protocol="sip">
		<![CDATA[
REGISTER sip:[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>
Call-ID: [$$call_id$$]
User-Agent: SIP-Tester
CSeq: 1 REGISTER
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>;expires=400
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='WWW-Authenticate:\s*([A-Za-z]+)\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="scheme,authentication"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="callid"/>
			<compare first="[$response],[$scheme]" second="401,Digest">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
			<authenticate assign_to="auth">
				<![CDATA[
				authtype = [$scheme], authname = [$$users.0.authname], password = [$$users.0.password], digest-uri-value = sip:[$$sock.5.ipaddr]:[$$sock.5.port], method = "REGISTER", [$authentication]
				]]>
			</authenticate>
		</actions>
   </recv>

	<send connection="2" protocol="sip">
		<![CDATA[
REGISTER sip:[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>
Call-ID: [$callid]
User-Agent: SIP-Tester
CSeq: 2 REGISTER
[$auth] 
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>;expires=400
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
		</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
REGISTER sip:[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.6.ipaddr]:[$$sock.6.port];branch=[$$branch$$]
From: SIP-Recv <sip:[$$users.1.username]@[$$users.1.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.1.domain]>
Call-ID: [$$call_id$$]
User-Agent: SIP-Tester
CSeq: 1 REGISTER
Contact: <sip:[$$users.1.username]@[$$sock.6.ipaddr]:[$$sock.6.port]>;expires=400
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='WWW-Authenticate:\s*([A-Za-z]+)\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="scheme,authentication"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="callid"/>
			<compare first="[$response],[$scheme]" second="401,Digest">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
			<authenticate assign_to="auth">
				<![CDATA[
				authtype = [$scheme], authname = [$$users.1.authname], password = [$$users.1.password], digest-uri-value = sip:[$$sock.5.ipaddr]:[$$sock.5.port], method = "REGISTER", [$authentication]
				]]>
			</authenticate>
		</actions>
	</recv>

	<send connection="3" protocol="sip">
		<![CDATA[
REGISTER sip:[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.6.ipaddr]:[$$sock.6.port];branch=[$$branch$$]
From: SIP-Recv <sip:[$$users.1.username]@[$$users.1.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.1.domain]>
Call-ID: [$callid]
User-Agent: SIP-Tester
CSeq: 2 REGISTER
[$auth] 
Contact: <sip:[$$users.1.username]@[$$sock.6.ipaddr]:[$$sock.6.port]>;expires=400
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="3" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<!-->
	SIP call
	<-->
		<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$$call_id$$]
User-Agent: SIP-Tester
CSeq: 101 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='WWW-Authenticate:\s*([A-Za-z]+)\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="scheme,authentication"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="callid"/>
			<compare first="[$response],[$scheme]" second="401,Digest">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
			<authenticate assign_to="auth">
				<![CDATA[
				authtype = [$scheme], authname = [$$users.0.authname], password = [$$users.0.password], digest-uri-value = sip:[$$sock.5.ipaddr]:[$$sock.5.port], method = "INVITE", [$authentication]
				]]>
			</authenticate>
		</actions>
	</recv>

	<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$callid]
User-Agent: SIP-Tester
CSeq: 102 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
[$auth]
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<compare first="[$response]" second="100">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(INVITE)\ssip:" assign_to="request"/>
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;)\r' assign_to="sip_to_B"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="INVITE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 100 Trying
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B]
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 180 Ringing
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="180">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 184[$$return$$]
v=0
o=- 1094199684727664219 3060688246994854032 IN IP4 192.168.114.200
s=Session SDP
c=IN IP4 192.168.114.200
t=0 0
m=audio 65400 RTP/AVP 8
a=rtpmap:8 PCMA/8000
a=ptime:20[$$return$$]]]>
	</send>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(ACK)\ssip:" assign_to="request"/>
      		<compare first="[$request]" second="ACK">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_A"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_A"/>
      		<catch regexp='To:[A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;([A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_tag_A"/>      		
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="2" protocol="sip">
		<![CDATA[
ACK sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 102 ACK
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], control_category="statistical", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<recv connection="1" timeout="4000" >
    	<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				NO MESSAGE
				]]>
			</validate>
    	</actions> 
   </recv>

	<!-->
	SIP release call
	<-->
	<send connection="2" protocol="sip">
		<![CDATA[
BYE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 103 BYE
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(BYE)\ssip:" assign_to="request"/>      		
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:([A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="BYE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
Contact: <sip:[$$users.1.username]@[$$sock.6.ipaddr]:[$$sock.6.port]>
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.22
	<-->

	<!-->
	SIP call
	<-->
		<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$$call_id$$]
User-Agent: SIP-Tester
CSeq: 101 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='WWW-Authenticate:\s*([A-Za-z]+)\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="scheme,authentication"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="callid"/>
			<compare first="[$response],[$scheme]" second="401,Digest">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
			<authenticate assign_to="auth">
				<![CDATA[
				authtype = [$scheme], authname = [$$users.0.authname], password = [$$users.0.password], digest-uri-value = sip:[$$sock.5.ipaddr]:[$$sock.5.port], method = "INVITE", [$authentication]
				]]>
			</authenticate>
		</actions>
	</recv>

	<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$callid]
User-Agent: SIP-Tester
CSeq: 102 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
[$auth]
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<compare first="[$response]" second="100">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(INVITE)\ssip:" assign_to="request"/>
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;)\r' assign_to="sip_to_B"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="INVITE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 100 Trying
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B]
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 180 Ringing
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="180">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 184[$$return$$]
v=0
o=- 1094199684727664219 3060688246994854032 IN IP4 192.168.114.200
s=Session SDP
c=IN IP4 192.168.114.200
t=0 0
m=audio 65400 RTP/AVP 8
a=rtpmap:8 PCMA/8000
a=ptime:20[$$return$$]]]>
	</send>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(ACK)\ssip:" assign_to="request"/>
      		<compare first="[$request]" second="ACK">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_A"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_A"/>
      		<catch regexp='To:[A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;([A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_tag_A"/>      		
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="2" protocol="sip">
		<![CDATA[
ACK sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 102 ACK
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<recv connection="1" timeout="4000" >
    	<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				NO MESSAGE
				]]>
			</validate>
    	</actions> 
   </recv>

	<!-->
	SIP release call
	<-->
	<send connection="2" protocol="sip">
		<![CDATA[
BYE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 103 BYE
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(BYE)\ssip:" assign_to="request"/>      		
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:([A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="BYE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
Contact: <sip:[$$users.1.username]@[$$sock.6.ipaddr]:[$$sock.6.port]>
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<!-->
	6.23
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="local", phone_number=[$$users.2.username], control_category="combined", line_group_number=1, priority="common")
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=1)
				]]>
			</validate>
		</actions>
	</recv>
	

	<!-->
	6.24
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="full", phone_number=[$$users.4.username], control_category="separate", line_group_number=2, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	6.25
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=8, object_type="partial", phone_number=[$$users.3.username], control_category="separate", line_group_number=2, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.1
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.2
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=2, object_type="full", phone_number=[$$users.3.username], phone_type='russian')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.3
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=3, object_type="trunk", linkset_number=0)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv>

	<!-->
	7.4
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=4, object_type="partial", phone_number=[$$users.4.username], phone_type='russian')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.5
	put user0 on statistical control
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], control_category="statistical", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	SIP call
	<-->
		<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$$call_id$$]
User-Agent: SIP-Tester
CSeq: 101 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='WWW-Authenticate:\s*([A-Za-z]+)\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="scheme,authentication"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="callid"/>
			<compare first="[$response],[$scheme]" second="401,Digest">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
			<authenticate assign_to="auth">
				<![CDATA[
				authtype = [$scheme], authname = [$$users.0.authname], password = [$$users.0.password], digest-uri-value = sip:[$$sock.5.ipaddr]:[$$sock.5.port], method = "INVITE", [$authentication]
				]]>
			</authenticate>
		</actions>
	</recv>

	<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$callid]
User-Agent: SIP-Tester
CSeq: 102 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
[$auth]
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<compare first="[$response]" second="100">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(INVITE)\ssip:" assign_to="request"/>
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;)\r' assign_to="sip_to_B"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="INVITE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 100 Trying
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B]
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 180 Ringing
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="180">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 184[$$return$$]
v=0
o=- 1094199684727664219 3060688246994854032 IN IP4 192.168.114.200
s=Session SDP
c=IN IP4 192.168.114.200
t=0 0
m=audio 65400 RTP/AVP 8
a=rtpmap:8 PCMA/8000
a=ptime:20[$$return$$]]]>
	</send>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(ACK)\ssip:" assign_to="request"/>
      		<compare first="[$request]" second="ACK">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_A"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_A"/>
      		<catch regexp='To:[A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;([A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_tag_A"/>      		
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="2" protocol="sip">
		<![CDATA[
ACK sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 102 ACK
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="4000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 
   
	<recv connection="1" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				NO MESSAGE
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	SIP release call
	<-->
	<send connection="2" protocol="sip">
		<![CDATA[
BYE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 103 BYE
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(BYE)\ssip:" assign_to="request"/>      		
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:([A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="BYE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
Contact: <sip:[$$users.1.username]@[$$sock.6.ipaddr]:[$$sock.6.port]>
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<!-->
	7.6
	put user0 on full control
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], control_category="combined", line_group_number=1, priority="common", phone_type='local', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	SIP call
	<-->
		<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$$call_id$$]
User-Agent: SIP-Tester
CSeq: 101 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='WWW-Authenticate:\s*([A-Za-z]+)\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="scheme,authentication"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="callid"/>
			<compare first="[$response],[$scheme]" second="401,Digest">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
			<authenticate assign_to="auth">
				<![CDATA[
				authtype = [$scheme], authname = [$$users.0.authname], password = [$$users.0.password], digest-uri-value = sip:[$$sock.5.ipaddr]:[$$sock.5.port], method = "INVITE", [$authentication]
				]]>
			</authenticate>
		</actions>
	</recv>

	<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$callid]
User-Agent: SIP-Tester
CSeq: 102 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
[$auth]
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<compare first="[$response]" second="100">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(INVITE)\ssip:" assign_to="request"/>
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;)\r' assign_to="sip_to_B"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="INVITE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 100 Trying
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B]
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 180 Ringing
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="180">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 184[$$return$$]
v=0
o=- 1094199684727664219 3060688246994854032 IN IP4 192.168.114.200
s=Session SDP
c=IN IP4 192.168.114.200
t=0 0
m=audio 65400 RTP/AVP 8
a=rtpmap:8 PCMA/8000
a=ptime:20[$$return$$]]]>
	</send>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(ACK)\ssip:" assign_to="request"/>
      		<compare first="[$request]" second="ACK">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_A"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_A"/>
      		<catch regexp='To:[A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;([A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_tag_A"/>      		
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="2" protocol="sip">
		<![CDATA[
ACK sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 102 ACK
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<recv connection="1" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				52 (ormnum=[$$sock.0.ormNum], operation_code=5)
				]]>
			</validate>
		</actions>
	</recv> 
   
	<!-->
	SIP release call
	<-->
	<send connection="2" protocol="sip">
		<![CDATA[
BYE sip:[$$users.1.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 103 BYE
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="3" timeout="4000" >
    	<actions>
      		<catch regexp="(BYE)\ssip:" assign_to="request"/>      		
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:([A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="BYE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="3" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
Contact: <sip:[$$users.1.username]@[$$sock.6.ipaddr]:[$$sock.6.port]>
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<!-->
	7.7
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="local", phone_number=[$$users.1.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.8
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=1, object_type="local", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.9
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="local", phone_number=[$$users.4.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.10
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="invalid", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.11
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="local", phone_number=[$$users.0.username], phone_type='russian')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.12
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="full", phone_number=[$$users.0.username], phone_type='local')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.13
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=6, object_type="local", phone_number=[$$users.0.username], phone_type='local', phone_length=17)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.14
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=8, object_type="full", phone_number=[$$users.3.username], phone_type='russian')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.15
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="partial", phone_number=[$$users.4.username], phone_type='russian')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=1)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.16
	put user3 on full control
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=2, object_type="full", phone_number=[$$users.3.username], control_category="separate", line_group_number=2, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=3, object_type="partial", phone_number=[$$users.4.username], control_category="separate", line_group_number=2, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	SIP call
	<-->
		<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.3.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$$call_id$$]
User-Agent: SIP-Tester
CSeq: 101 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='WWW-Authenticate:\s*([A-Za-z]+)\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="scheme,authentication"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="callid"/>
			<compare first="[$response],[$scheme]" second="401,Digest">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
			<authenticate assign_to="auth">
				<![CDATA[
				authtype = [$scheme], authname = [$$users.0.authname], password = [$$users.0.password], digest-uri-value = sip:[$$sock.5.ipaddr]:[$$sock.5.port], method = "INVITE", [$authentication]
				]]>
			</authenticate>
		</actions>
	</recv>

	<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.3.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$callid]
User-Agent: SIP-Tester
CSeq: 102 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
[$auth]
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<compare first="[$response]" second="100">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="5" timeout="4000" >
    	<actions>
      		<catch regexp="(INVITE)\ssip:" assign_to="request"/>
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;)\r' assign_to="sip_to_B"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="INVITE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="5" protocol="sip">
		<![CDATA[
SIP/2.0 100 Trying
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B]
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="5" protocol="sip">
		<![CDATA[
SIP/2.0 180 Ringing
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="180">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="5" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Contact: <sip:[$$users.3.username]@[$$sock.8.ipaddr]:[$$sock.8.port]>
Content-Length: 184[$$return$$]
v=0
o=- 1094199684727664219 3060688246994854032 IN IP4 192.168.114.200
s=Session SDP
c=IN IP4 192.168.114.200
t=0 0
m=audio 65400 RTP/AVP 8
a=rtpmap:8 PCMA/8000
a=ptime:20[$$return$$]]]>
	</send>

	<recv connection="5" timeout="4000" >
    	<actions>
      		<catch regexp="(ACK)\ssip:" assign_to="request"/>
      		<compare first="[$request]" second="ACK">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_A"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_A"/>
      		<catch regexp='To:[A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;([A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_tag_A"/>      		
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="2" protocol="sip">
		<![CDATA[
ACK sip:[$$users.3.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.3.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 102 ACK
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=3, object_type="partial", phone_number=[$$users.4.username], phone_type='russian')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<recv connection="1" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				52 (ormnum=[$$sock.0.ormNum], operation_code=5)
				]]>
			</validate>
		</actions>
	</recv> 
   
	<!-->
	SIP release call
	<-->
	<send connection="2" protocol="sip">
		<![CDATA[
BYE sip:[$$users.3.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.3.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 103 BYE
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="5" timeout="4000" >
    	<actions>
      		<catch regexp="(BYE)\ssip:" assign_to="request"/>      		
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:([A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="BYE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="5" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
Contact: <sip:[$$users.3.username]@[$$sock.8.ipaddr]:[$$sock.8.port]>
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<!-->
	7.17
	put user3 on full control
	<-->
	<send connection="0">
		<![CDATA[
		5 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=3, object_type="partial", phone_number=[$$users.4.username], control_category="separate", line_group_number=2, priority="common", phone_type='russian', linkset_number=65535)
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=5, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=5, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	SIP call
	<-->
		<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.3.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$$call_id$$]
User-Agent: SIP-Tester
CSeq: 101 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='WWW-Authenticate:\s*([A-Za-z]+)\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="scheme,authentication"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="callid"/>
			<compare first="[$response],[$scheme]" second="401,Digest">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
			<authenticate assign_to="auth">
				<![CDATA[
				authtype = [$scheme], authname = [$$users.0.authname], password = [$$users.0.password], digest-uri-value = sip:[$$sock.5.ipaddr]:[$$sock.5.port], method = "INVITE", [$authentication]
				]]>
			</authenticate>
		</actions>
	</recv>

	<send connection="2" protocol="sip">
		<![CDATA[
INVITE sip:[$$users.3.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: SIP-Send <sip:[$$users.0.username]@[$$users.0.domain]>;tag=[$$tag$$]
To: SIP-Recv <sip:[$$users.1.username]@[$$users.0.domain]>
Call-ID: [$callid]
User-Agent: SIP-Tester
CSeq: 102 INVITE
Contact: <sip:[$$users.0.username]@[$$sock.4.ipaddr]:[$$sock.4.port]>
Max-Forwards: 70
[$auth]
Supported: replaces
Allow: INVITE,BYE,CANCEL,ACK,REGISTER
Content-Type: application/sdp
Content-Length: 130[$$return$$]
v=0
o=- 4321201733 1269330201 IN IP4 192.168.114.200
s=SDP Data
c=IN IP4 192.168.114.200
t=0 0
m=audio 65530 RTP/AVP 8 0 18[$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<compare first="[$response]" second="100">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="5" timeout="4000" >
    	<actions>
      		<catch regexp="(INVITE)\ssip:" assign_to="request"/>
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;)\r' assign_to="sip_to_B"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="INVITE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="5" protocol="sip">
		<![CDATA[
SIP/2.0 100 Trying
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B]
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="5" protocol="sip">
		<![CDATA[
SIP/2.0 180 Ringing
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="180">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="5" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
User-Agent: SIP tester B side
Contact: <sip:[$$users.3.username]@[$$sock.8.ipaddr]:[$$sock.8.port]>
Content-Length: 184[$$return$$]
v=0
o=- 1094199684727664219 3060688246994854032 IN IP4 192.168.114.200
s=Session SDP
c=IN IP4 192.168.114.200
t=0 0
m=audio 65400 RTP/AVP 8
a=rtpmap:8 PCMA/8000
a=ptime:20[$$return$$]]]>
	</send>

	<recv connection="5" timeout="4000" >
    	<actions>
      		<catch regexp="(ACK)\ssip:" assign_to="request"/>
      		<compare first="[$request]" second="ACK">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="2" timeout="10000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_A"/>
      		<catch regexp='Call-ID:\s*([A-Za-z0-9_/=",\.\-\$\*]+)\r' assign_to="call_id_A"/>
      		<catch regexp='To:[A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;([A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_tag_A"/>      		
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="2" protocol="sip">
		<![CDATA[
ACK sip:[$$users.3.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.3.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 102 ACK
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=2, object_type="partial", phone_number=[$$users.3.username], phone_type='russian')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<recv connection="1" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				52 (ormnum=[$$sock.0.ormNum], operation_code=5)
				]]>
			</validate>
		</actions>
	</recv> 
   
	<!-->
	SIP release call
	<-->
	<send connection="2" protocol="sip">
		<![CDATA[
BYE sip:[$$users.3.username]@[$$sock.5.ipaddr]:[$$sock.5.port] SIP/2.0
Via: SIP/2.0/UDP [$$sock.4.ipaddr]:[$$sock.4.port];branch=[$$branch$$]
From: [$sip_from_A]
To: SIP-Recv <sip:[$$users.3.username]@[$$users.0.domain]>[$sip_to_tag_A]
Call-ID: [$call_id_A]
User-Agent: SIP-Tester
CSeq: 103 BYE
Max-Forwards: 70
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<recv connection="2" timeout="4000" >
    	<actions>
      		<catch regexp="SIP/2.0\s*([0-9][0-9][0-9])" assign_to="response"/>
    		<compare first="[$response]" second="200">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<recv connection="5" timeout="4000" >
    	<actions>
      		<catch regexp="(BYE)\ssip:" assign_to="request"/>      		
      		<catch regexp='Via:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_via_B"/>
      		<catch regexp='From:\s*([A-Za-z0-9_/=@",;\:\.\s\-\$\*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+)\r' assign_to="sip_from_B"/>
      		<catch regexp='To:([A-Za-z0-9_/=@",;\:\.\s\-\$*]*&lt;[A-Za-z0-9_/=@",;\:\.\s\-\$\*]+&gt;[A-Za-z0-9_/=,;\:\.\-\*]+)\r' assign_to="sip_to_B"/>
      		<catch regexp='CSeq:\s*([A-Za-z0-9_/=",\.\s\-\$\*]+)\r' assign_to="cseq_B"/>
      		<compare first="[$request]" second="BYE">
				<exit status="failure" info="Test is unsuccessfully completed"/>
			</compare>
    	</actions> 
   </recv>

	<send connection="5" protocol="sip">
		<![CDATA[
SIP/2.0 200 OK
Via: [$sip_via_B]
From: [$sip_from_B]
To: [$sip_to_B];tag=bside0001
Call-ID: [$call_id_B]
CSeq: [$cseq_B]
Contact: <sip:[$$users.3.username]@[$$sock.8.ipaddr]:[$$sock.8.port]>
User-Agent: SIP tester B side
Content-Length: 0[$$return$$][$$return$$]]]>
	</send>

	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=3, object_type="partial", phone_number=[$$users.4.username], phone_type='russian')
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=6, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<!-->
	7.18
	<-->
	<send connection="0">
		<![CDATA[
		6 (header=[[$$sock.0.ormNum], [$$sock.0.password]]; object_number=7, object_type="full", phone_number=[$$users.2.username])
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=6, receipt_status=1)
				]]>
			</validate>
		</actions>
	</recv> 


	<!-->
	Return to idle
	<-->
	<send connection="0">
		<![CDATA[
		2 (header=[[$$sock.0.ormNum], [$$sock.0.password]])
		]]>
	</send>

	<nop>
		<actions>
			<pause timeout="2000"/>
		</actions>
	</nop>

	<recv connection="0" timeout="10000" >
		<actions>
			<validate rule="sorm" num="1">
				<![CDATA[
				27 (ormnum=[$$sock.0.ormNum], command_code=2, receipt_status=0)
				]]>
			</validate>
			<validate rule="sorm" num="2">
				<![CDATA[
				28 (ormnum=[$$sock.0.ormNum], command_code=2, execution_status=0)
				]]>
			</validate>
		</actions>
	</recv> 

	<disconnect connection="0" />
	<disconnect connection="1" />

</scenario>